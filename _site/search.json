[
  {
    "objectID": "posts/20240208/index.html",
    "href": "posts/20240208/index.html",
    "title": "Obxectivo",
    "section": "",
    "text": "Escribir un programa, simular o ciclo Rankine calculando e trazando os puntos correspondentes aos puntos do estado e unindo a fenda entre eles, e identificalos como procesos tanto no gráfico T-S como no H-S, xunto co cálculo do traballo neto e a relación de potencia de retorno."
  },
  {
    "objectID": "posts/20240208/index.html#introdución",
    "href": "posts/20240208/index.html#introdución",
    "title": "Obxectivo",
    "section": "Introdución",
    "text": "Introdución\nO ciclo Rankine é un ciclo termodinámico. Serve de modelo para a obtención de traballo nunha turbina de vapor. Debe o seu nome ó matemático escocés William John Macquorn Rankine.\nO ciclo Rankine é un ciclo enerxético de vapor que se usa nas centrais térmicas. É semellante ao ciclo de Carnot. O seu uso é máis popular porque é moito máis práctico que o ciclo de Carnot, con boas taxas de eficiencia. Tamén ten deseños que melloran a eficiencia de moitos xeitos, como a rexeración e o requecemento. Isto fai que o ciclo de Rankine sexa un ciclo ideal para as turbinas de vapor.\n\n\n\n\nDiagrama T-S exhibindo do proceso real e do ideal."
  },
  {
    "objectID": "posts/20240208/index.html#procesos-dun-ciclo-rankine",
    "href": "posts/20240208/index.html#procesos-dun-ciclo-rankine",
    "title": "Obxectivo",
    "section": "Procesos dun ciclo Rankine",
    "text": "Procesos dun ciclo Rankine\nHai catro procesos no ciclo Rankine. Os estados identifícanse mediante números (en marrón) no diagrama T–s.\n**Proceso 1-2: o fluído de traballo é bombeado de baixa a alta presión. Como o fluído é un líquido nesta fase, a bomba require pouca enerxía de entrada. O proceso 1-2 é a compresión isentrópica. Proceso 2-3: o líquido de alta presión entra nunha caldeira, onde se quenta a presión constante por unha fonte de calor externa para converterse nun vapor saturado seco. A enerxía de entrada necesaria pódese calcular facilmente gráficamente, usando un gráfico de entalpía-entropía (diagrama h–s ou diagrama de Mollier), ou numericamente, usando táboas de vapor ou software. O proceso 2-3 é a adición de calor a presión constante na caldeira. Proceso 3-4: o vapor saturado seco se expande a través dunha turbina, xerando enerxía. Isto diminúe a temperatura e a presión do vapor e pode producirse algunha condensación. A saída deste proceso pódese calcular facilmente usando o gráfico ou as táboas indicadas anteriormente. O proceso 3-4 é a expansión isentrópica. Proceso 4-1: o vapor húmido entra entón nun condensador, onde se condensa a presión constante para converterse nun líquido saturado. O proceso 4-1 é o rechazo de calor a presión constante no condensador. Nun ciclo de Rankine ideal, a bomba e a turbina serían isentrópicas, é dicir, a bomba e a turbina non xerarían entropía e, polo tanto, maximizarían a produción neta de traballo. Os procesos 1–2 e 3–4 estarían representados por liñas verticais no diagrama T–s e semellan máis ao do ciclo de Carnot. O ciclo de Rankine que se mostra aquí evita que o estado do fluído de traballo acabe na rexión do vapor sobrequentado despois da expansión na turbina, [1] o que reduce a enerxía eliminada polos condensadores.\nExisten catro procesos nun ciclo Rankine, cada un alterando as propiedades do fluído de traballo. Estas propiedades son identificadas por números no diagrama.\n\nProceso 1-2, compresión isoentrópica: Primeiro, o fluído é bombeado (idealmente de forma isoentrópica) dunha presión baixa a unha presión alta utilizándose unha bomba. O bombeamento require subministración de enerxía.\nProceso 2-3, adición isobárica de calor: o fluído presurizado entra nunha caldeira, onde é quentado a presión constante até se tornar vapor sobrequentado. Fontes comúns de calor inclúen carbón, gas natural e enerxía nuclear.\nProceso 3-4, expansión isoentróica: o vapor sobrequentado expándese a través dunha turbina para xerar traballo. Idealmente, esta expansión é isoentrópica. Con esta expansión, tanto a presión como a temperatura se reducen.\nProceso 4-1. elimonación isobárica de calor: o vapor entra nun condensador, onde é arrefriado até a condición de líquido saturado. Este líquido retorna á bomba e o ciclo repítese.\n\nNeste ciclo, o traballo obtense en da turbina e consúmese na bomba. Ademais, se subministra cakir na caldeira e se elimina no condensador.\nO ciclo de potencia do vapor real difire do ciclo ideal de Rankine debido ás irreversibilidades dos compoñentes inherentes causadas pola fricción do fluído e a perda de calor ao ambiente; a fricción do fluído provoca caídas de presión na caldeira, no condensador e na canalización entre os compoñentes e, como resultado, o vapor sae da caldeira a menor presión; A perda de calor reduce a produción neta de traballo, polo que é necesaria a adición de calor ao vapor na caldeira para manter o mesmo nivel de produción neta de traballo.\nCon esta información, podemos atopar o traballo neto, a eficiencia e a relación de potencia de retorno do ciclo."
  },
  {
    "objectID": "posts/20240208/index.html#ecuacións",
    "href": "posts/20240208/index.html#ecuacións",
    "title": "Obxectivo",
    "section": "Ecuacións",
    "text": "Ecuacións\nCada unha das ecuacións seguintes pódense obter facilmente a partires do balance de masa e enerxía do volume de control. A quinta ecuación define a eficiencia termodinámica do ciclo como a razón entre o traballo obtido do sistema e a calor fornecida ao sistema.\n\\[\n\\frac { \\dot{Q}_{caldeira} } { \\dot{m} } = h_2 - h_1\n\\]\n\\[\n\\frac { \\dot{W}_{turbina} } { \\dot{m} } = h_2 - h_3\n\\]\n\\[\n\\frac { \\dot{Q}_{condensador} } { \\dot{m} } = h_4 - h_3\n\\]\n\\[\n\\frac { \\dot{W}_{bomba} } { \\dot{m} } = h_4 - h_1\n\\]\nRendemento:\n\\[\n\\eta = \\frac { \\dot{W}_{turbina} - \\dot{W}_{bomba} } { \\dot{Q}_{caldeira} }\n\\]\nonde:\n\\(\\dot{Q}_{entra}\\) é a taxa de entrada de calor (enerxía por unidade de tempo)\n\\(\\dot{m}\\) o caudal másico (masa por unidade de tempo)\n\\(\\dot{W}\\) o traballo mecánico usado ou proveniente do sistema (enerxía por unidade de tempo)\n\\(\\eta\\) a eficiencia termodinámica do proceso (adimensional), e\n\\(h_1,h_2,h_3,h_4,\\) son os valores de entalpía específica especificados no diagrama T-S\nA eficiencia enerxética do ciclo defínese como:\n\\[\n\\texttt{eficiencia} = \\frac { W_{neto} } { Q_{subministrado} } \\times 100\n\\]\ndo mesmo xeito:\n\\[\n\\texttt{relacion de potencia de retorno} = \\frac { W_{turbina} } { W_{bomba} }\n\\]\n\nCiclo de Rankine ideal."
  },
  {
    "objectID": "posts/20240208/index.html#enunciado",
    "href": "posts/20240208/index.html#enunciado",
    "title": "Obxectivo",
    "section": "Enunciado",
    "text": "Enunciado\nDeterminr a eficiencia e a tasa de retorno de potencia para o ciclo Rankine ideal da figura, que usa vapor de auga como fluido de traballo e no que a presión do condensador é de 10 kPa, e a da caldeira 2 Mpa. O vapor de auga abandona a caldeira en forma de vapor saturado. Determinar tammén o traballo da bomba por quilogramo de fluido (\\(W_p\\)) e a calor eliminada por quilogramo de fluido no condensador, \\(q_1\\).\n\nimport numpy as np\nimport pyromat as pm\n\nPodemos ollar o ficheiro de configuración usando:\n\npm.config\n\n     config_file : ['C:\\\\Users\\\\anxos\\\\AppData\\\\Local\\\\Programs\\\\Pyth...\n  config_verbose : False\n         dat_dir : ['C:\\\\Users\\\\anxos\\\\AppData\\\\Local\\\\Programs\\\\Pyth...\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : 'C:\\\\Users\\\\anxos\\\\AppData\\\\Local\\\\Programs\\\\Pytho...\n         reg_dir : ['C:\\\\Users\\\\anxos\\\\AppData\\\\Local\\\\Programs\\\\Pyth...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.4'\n warning_verbose : True\n\n\nO fluido é auga:\n\nauga = pm.get(\"mp.H2O\")\n\nCambiamos as unidades de presión a kPa:\n\npm.config['unit_pressure'] = 'kPa'\n\nPara resolver o problema consideramos unha superficie de control arredor da bomba, a caldeira, a turbina e o condensador.\n\nBomba (traballo)\nO líquido está saturado, logo x = 0.\n\n# líquido saturado, x = 0\np1 = 10  # kPa \np2 = 2000 # kPa\nv = 1 / auga.ds(p=p1)[0]  # 0 é porque x = 0\nw_p = v * ( p2 - p1 )\nprint(\"O traballo que entrega á bomba é de {:4.2f} kJ/kg\".format(w_p[0]))\n# print(f\"O traballo que entrega á bomba é de {round(float(w_p),2)} kJ/kg\")\n\nO traballo que entrega á bomba é de 2.01 kJ/kg\n\n\n\nh1 = auga.hs(p=p1)[0]\nh2 = h1 + w_p[0]\nprint(\"h2 = {:4.2f} kJ/kg\".format(h2[0]))\nprint(f\"h2 = {round(float(h2[0])):4.2f} kJ/kg\")\n\nh2 = 193.81 kJ/kg\nh2 = 194.00 kJ/kg\n\n\n\n\nCaldeira (calor)\nO vapor abandona a caldeira en forma de vapor saturado. Logo x = 1.\n\np3 = p2\nh3 = auga.hs(p=p3)[1]  # 1 porque x = 1\nq_H = h3 - h2\nprint(\"A calor necesaria na caldeira é de {:4.2f} kJ/kg\".format(q_H[0]))\n# print(f\"A calor necesaria na caldeira é de {round(float(q_H),2)} kJ/kg\")\n\nA calor necesaria na caldeira é de 2604.52 kJ/kg"
  },
  {
    "objectID": "posts/20240208/index.html#turbina-traballo",
    "href": "posts/20240208/index.html#turbina-traballo",
    "title": "Obxectivo",
    "section": "Turbina (traballo)",
    "text": "Turbina (traballo)\n\np4 = p1\ns3 = auga.ss(p=p3)[1]  # 1 porque x = 1\ns4 = s3\nx = auga.T_s(s=s4,p=p4,quality=True)[1]  # 1 porque x = 1\nh4 = auga.h(p=p4,x=x)\nw_t = h3 - h4\nprint(\"O traballo xerado pola turbina é de {:4.2f} kJ/kg\".format(w_t[0]))\n# print(f\"O traballo xerado pola turbina é de {round(float(w_t),2)} kJ/kg\")\n\nO traballo xerado pola turbina é de 791.69 kJ/kg\n\n\n\nCondensador (calor)\n\nq_L = h4 - h1\nprint(\"A calor recuperada no condensador é de {:4.2f} kJ/kg\".format(q_L[0]))\n# print(f\"A calor recuperada no condensador é de {round(float(q_L),2)} kJ/kg\")\n\nA calor recuperada no condensador é de 1814.83 kJ/kg\n\n\n\n\nEficiencia\nA calculamos como:\n\\[\n\\eta_{ciclo} = \\frac { W_{neto} } { q_H }\n\\]\n\neficiencia_ciclo = ( w_t[0] - w_p[0]  ) / q_H[0] * 100\n# print(\"A eficiencia térmica do ciclo é do {:4.2f}%\".format(eficiencia_ciclo[0]))\nprint(f\"A eficiencia térmica do ciclo é do {round(float(eficiencia_ciclo),2)}%\")\n\nA eficiencia térmica do ciclo é do 30.32%"
  },
  {
    "objectID": "ipynb/rankine-ideal-iapws.html",
    "href": "ipynb/rankine-ideal-iapws.html",
    "title": "Ciclo Rankine Ideal Simple",
    "section": "",
    "text": "!pip install iapws\n\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nRequirement already satisfied: iapws in /usr/local/lib/python3.7/dist-packages (1.5.3)\nRequirement already satisfied: scipy&gt;=1.2 in /usr/local/lib/python3.7/dist-packages (from iapws) (1.7.3)\nRequirement already satisfied: numpy&lt;1.23.0,&gt;=1.16.5 in /usr/local/lib/python3.7/dist-packages (from scipy&gt;=1.2-&gt;iapws) (1.21.6)"
  },
  {
    "objectID": "ipynb/rankine-ideal-iapws.html#ciclo-rankine-ideal-simple",
    "href": "ipynb/rankine-ideal-iapws.html#ciclo-rankine-ideal-simple",
    "title": "Ciclo Rankine Ideal Simple",
    "section": "Ciclo Rankine Ideal Simple",
    "text": "Ciclo Rankine Ideal Simple\n\n\nfrom iapws import IAPWS97\n\n\n# Estado 1\n\nP1 = 0.075 # MPa\nx1 = 0 # fracción molar adimensional\nestado1 = IAPWS97(P=P1,x=x1)\nv1 = estado1.v   # en m3/kg\nh1 = estado1.h   # en kJ/kg\ns1 = estado1.s   # en kJ/(kg·K)\n\n\n# Estado 2\n\nP2 = 3   # MPa\ns2 = s1  # isoentrópica\n\nestado2 = IAPWS97(P=P2,s=s2)\n\nh2 = estado2.h\n\n\n# Estado 3\n\nP3 = P2\nT3 = 350.0 + 273.15\n\nestado3 = IAPWS97(P=P3,T=T3)\n\nh3 = estado3.h\ns3 = estado3.s\n\n\n# Estado 4\n\nP4 = P1\ns4 = s3\n\nestado4 = IAPWS97(P=P4,s=s4)\n\nh4 = estado4.h\n\n\nWbomba             = v1 * ( P2 - P1 ) * 1000 # kJ/kg\nQcaldeiraentrada   = h3 - h2\nQcondensadorsaida  = h1 - h4\nWturbina           = h4 - h3\neficiencia         = abs( Wbomba - Wturbina ) / Qcaldeiraentrada * 100\n\n\nprint('Calor que entra na caldeira  {:.2f} kJ/kg'.format(Qcaldeiraentrada))\nprint('Calor que sae do condensador {:.2f} kJ/kg'.format(Qcondensadorsaida))\nprint('Traballo da bomba            {:.2f} kJ/kg'.format(Wbomba))\nprint('Traballo da turbina          {:.2f} kJ/kg'.format(Wturbina))\nprint('Eficiencia termodinámica do ciclo {:.2f}%'.format(eficiencia))\n\nCalor que entra na caldeira  2728.66 kJ/kg\nCalor que sae do condensador -2018.66 kJ/kg\nTraballo da bomba            3.03 kJ/kg\nTraballo da turbina          -713.03 kJ/kg\nEficiencia termodinámica do ciclo 26.24%\n\n\n\neficiencia_bombacalor         = ( Wturbina - Wbomba ) / Qcondensadorsaida * 100\nprint('Eficiencia termodinámica da bomba de calor {:.2f}%'.format(eficiencia_bombacalor))\n\nEficiencia termodinámica da bomba de calor 35.47%"
  },
  {
    "objectID": "ipynb/Diagramas Pxy-Txy-xy.html",
    "href": "ipynb/Diagramas Pxy-Txy-xy.html",
    "title": "Obtención do diagrama P-x para unha temperatura de 115 ºC para unha mestura de hepano e octano.",
    "section": "",
    "text": "import numpy as np\n\n\n# Parámetros de Antoine\n\n# Heptano\nA_heptano = 4.02832\nB_heptano = 1268.636\nC_heptano = -56.199\n\n#Octano\nA_octano=4.04867\nB_octano=1355.126\nC_octano=-63.633\n\n# Alternativa\n# A = [A_heptano, A_octano]\n# B=[B_heptano, B_octano]\n# A[0] = A del heptano\n\n# Dato: temperatura\nT = 115 + 273.15 # K"
  },
  {
    "objectID": "ipynb/Diagramas Pxy-Txy-xy.html#creación-do-diagrama-pxy",
    "href": "ipynb/Diagramas Pxy-Txy-xy.html#creación-do-diagrama-pxy",
    "title": "Obtención do diagrama P-x para unha temperatura de 115 ºC para unha mestura de hepano e octano.",
    "section": "Creación do diagrama Pxy",
    "text": "Creación do diagrama Pxy\n\nimport matplotlib.pyplot as plt\n# Vector de valores de x\nx_heptano = np.linspace(0,1,11)\n# Calcula a presión total a partires das presións de vapor e as fraccións molares na fase vapor\nP_total = x_heptano * pv_heptano + ( 1 - x_heptano ) * pv_octano\n# Cálculo das presións de burbulla \nP_burbulla = x_heptano * pv_heptano + ( 1 - x_heptano ) * pv_octano\n# Cálculo dos valores de y\ny_heptano = pv_heptano * x_heptano / P_burbulla\n# Cálculo das presións de orballo\nP_orballo = 1 / ( y_heptano / pv_heptano + ( 1 - y_heptano ) / pv_octano )\n\n\n# Representación do diagrama P-x,y\nplt.plot(x_heptano, P_burbulla, 'yo-', y_heptano, P_orballo, 'go-')\nplt.xlim(0,1)\nplt.xlabel('x, y (heptano)')\nplt.ylabel('Presión (bar)')\nplt.title('Diagrama P-x,y')\n\nText(0.5, 1.0, 'Diagrama P-x,y')"
  },
  {
    "objectID": "ipynb/Diagramas Pxy-Txy-xy.html#apartado-2.-obtención-del-diagrama-t-xy-a-partir-de-una-presión-total-dada",
    "href": "ipynb/Diagramas Pxy-Txy-xy.html#apartado-2.-obtención-del-diagrama-t-xy-a-partir-de-una-presión-total-dada",
    "title": "Obtención do diagrama P-x para unha temperatura de 115 ºC para unha mestura de hepano e octano.",
    "section": "APARTADO 2. OBTENCIÓN DEL DIAGRAMA T-x,y A PARTIR DE UNA PRESIÓN TOTAL DADA",
    "text": "APARTADO 2. OBTENCIÓN DEL DIAGRAMA T-x,y A PARTIR DE UNA PRESIÓN TOTAL DADA\n\nfrom scipy.optimize import fsolve\n#Datos ejercicio\nP_t=1.5 #bar\nx_hept=np.linspace(0,1,11)\n#Se supone una temperatura de partida\nT_guess=396\n#Se crean dos listas en las que se almacenarán los datos de temperatura y fracciones molares del heptano para cada x\nlista_temperatura=[]\nlista_y=[]\n\n#Se definen las funciones para obtener las presiones de saturación del heptano y el octano\ndef p_sat_hept(T):\n    return 10**(A_hept-B_hept/(T+C_hept))\n\ndef p_sat_oct(T):\n    return 10**(A_oct-B_oct/(T+C_oct))\n\n#Se crea un bucle que devuelva el valor de la temperatura y la fracción molar de vapor para cada valor de x\nfor i in x_hept:\n    def fmin(T):\n        return i*p_sat_hept(T)/P_t+(1-i)*p_sat_oct(T)/P_t-1\n    solucion=fsolve(fmin,T_guess)\n    lista_temperatura.append(solucion[0])\n    y_hept=i*p_sat_hept(solucion)/P_t\n    lista_y.append(y_hept[0])\n\nprint(lista_temperatura) #valores de temperatura calculados\nprint(lista_y) #valores de y calculados\n\nNameError: name 'A_hept' is not defined\n\n\n\n#Representación del diagrama T-x,y\nimport matplotlib.pyplot as plt\nplt.plot(x_hept, lista_temperatura, 'ko-', lista_y, lista_temperatura, 'ro-')\nplt.xlim(0,1)\nplt.xlabel('x, y (heptano)')\nplt.ylabel('Temperatura (K)')\nplt.title('Diagrama T-x,y')\n\nText(0.5, 1.0, 'Diagrama T-x,y')\n\n\n\n\n\n\n\n\n\n\n#También se puede realizar con fsolve aplicado a la ecuación de Antoine, y no al sumatorio de y - 1\nz=np.linspace(0,1, num=11) #composición inicial\n#Funciones para determinar las presiones de saturación de los dos compuestos\ndef Psat1(T):\n    return 10**(A_hept-B_hept/(T+C_hept))\ndef Psat2(T):\n    return 10**(A_oct-B_oct/(T+C_oct))\n\n#Datos del enunciado\ny=z\nP = 1.5 #bar\nfrom scipy.optimize import fsolve\n\n\ndef fun1(T):\n    return P - 10**(A_hept-B_hept/(T+C_hept)) # a qué temperatura P externa es igual al otro término\nTinf=fsolve(fun1, 350) #350K valor supuesto inicial, Tinf=temperatura de ebullición del componente 1\n\ndef fun2(T):\n    return P - 10**(A_oct-B_oct/(T+C_oct))\nTsup=fsolve(fun2, 373) #Tsup=temperatura de ebullición del componente 2\n\nprint('La temperatura a la que hierve el componente 1 a la presión externa es {:5.2f} K.'.format(Tinf[0]))\nprint('La temperatura a la que hierve el componente 2 a la presión externa es {:5.2f} K.'.format(Tsup[0]))\n\nLa temperatura a la que hierve el componente 1 a la presión externa es 385.52 K.\nLa temperatura a la que hierve el componente 2 a la presión externa es 413.56 K.\n\n\n\nT=np.linspace(Tinf,Tsup, num=11)\nx = (P-Psat2(T))/(Psat1(T)-Psat2(T))\ny=x*Psat1(T)/P\nplt.plot(x, T,'ko-', y,T,'ro-')\nplt.xlim(0,1)\nplt.xlabel('x, y')\nplt.ylabel('T')\nplt.title('Diagrama T-x, y')\n\nText(0.5, 1.0, 'Diagrama T-x, y')"
  },
  {
    "objectID": "ipynb/ciclo-rankine-real.html",
    "href": "ipynb/ciclo-rankine-real.html",
    "title": "Eficiencias da bomba e da turbina",
    "section": "",
    "text": "!pip install pyromat\n\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nRequirement already satisfied: pyromat in /usr/local/lib/python3.7/dist-packages (2.2.2)\nRequirement already satisfied: numpy&gt;=1.7 in /usr/local/lib/python3.7/dist-packages (from pyromat) (1.21.6)\nimport pyromat as pm\npm.config\n\n     config_file : ['/usr/local/lib/python3.7/dist-packages/pyromat/c...\n  config_verbose : False\n         dat_dir : ['/usr/local/lib/python3.7/dist-packages/pyromat/data']\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : '/usr/local/lib/python3.7/dist-packages/pyromat'\n         reg_dir : ['/usr/local/lib/python3.7/dist-packages/pyromat/r...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.2'\n warning_verbose : True\npm.config[\"unit_pressure\"] = \"kPa\"\nauga = pm.get(\"mp.H2O\")"
  },
  {
    "objectID": "ipynb/ciclo-rankine-real.html#eficiencias-da-bomba-e-da-turbina",
    "href": "ipynb/ciclo-rankine-real.html#eficiencias-da-bomba-e-da-turbina",
    "title": "Eficiencias da bomba e da turbina",
    "section": "Eficiencias da bomba e da turbina",
    "text": "Eficiencias da bomba e da turbina\n\neta_turbina = 0.86\neta_bomba   = 0.8\n\nBomba\n\np1 = 10 # kPa\nT1 = 42 + 273.15 # K\nh1 = auga.hs(p=p1)[0]\np2 = 5000 # kPa\n\nA eficiencia da bomba pódese calcular mediante a seguinte ecuación:\n\\[\n\\frac { h_{2s} - h_1 } { W_{bomba} } =  \\frac { h_{2s} - h_1 } { h_2 - h_1 }\n\\tag{1}\n\\]\nPodemos sustituir \\(H_{2s} - h_1\\) por \\(v_1 ( p_2-p_1 )\\) co que a ecuación quédase do seguinte xeito:\n\\[\n\\eta_{bomba} = \\frac { v_1 \\left( p_2 - p_1 \\right) } { h_2 - h_1 }\n\\tag{2}\n\\]\nAranxando a expresión para calcuilar o traballo:\n\\[\nw_{bomba} = \\frac { v_1 \\left( p_2 - p_1 \\right) } { \\eta_{bomba} }\n\\tag{3}\n\\]\n\nv1 = auga.v(p=p1)[0]\nw_bomba = v1 * ( p2 - p1 ) / eta_bomba\n\nprint(f'Traballo requirido pola bomba: {round(float(w_bomba),4)} kJ/kg')\n\nh2 = h1 + w_bomba\n\nprint(f'Entalpía no punto 2: {round(float(h2),2)} kJ/kg')\n\nTraballo requirido pola bomba: 6.2562 kJ/kg\nEntalpía no punto 2: 198.05 kJ/kg\n\n\n\np3 = 4800 # kPa\nT3 = 40 + 273.15 # K\nh3 = auga.hs(T=T3)[0]\n\np4 = 4000 # kPa\nT4 = 400 + 273.15\nh4 = auga.h(p=p4,T=T4)\n\nq_H = h4 -h3\n\nprint(f'Calor que entra no evaporador {round(float(q_H),2)} kJ/kg')\n\nCalor que entra no evaporador 3046.98 kJ/kg\n\n\n\np5  = 3800 # kPa\nT5 = 380 + 273.15 # K\nh5 = auga.h(T=T5,p=p5)\ns5 = auga.s(T=T5,p=p5)\ns6s = s5\nx6s = auga.T_s(p=p1,s=s6s,quality=True)[1]\n\nprint(f'Cualidade co vapor que sae do condensador: {round(float(x6s),4)}')\n\nh6s = auga.h(p=p1,x=x6s)\n\nw_turbina = eta_turbina * ( h5 -h6s )\n\nprint(f'Traballo extraído da turbina: {round(float(w_turbina),2)} kJ/kg')\n\nCualidade co vapor que sae do condensador: 0.8105\nTraballo extraído da turbina: 894.49 kJ/kg"
  },
  {
    "objectID": "ipynb/ciclo-rankine-real.html#eficiencia-térmica",
    "href": "ipynb/ciclo-rankine-real.html#eficiencia-térmica",
    "title": "Eficiencias da bomba e da turbina",
    "section": "Eficiencia térmica",
    "text": "Eficiencia térmica\nPara calculala usamos a seguinte fórmula:\n\\[\n\\eta_{térmica} = \\frac { w_{neto} } { r_H } = \\frac { W_{turbina} - W_{bomba} } { q_H }\n\\tag{4}\n\\]\n\nw_neto = w_turbina - w_bomba\neta_termica =  n"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "./pyciclos",
    "section": "",
    "text": "c\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObxectivo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html",
    "title": "Obxectivo",
    "section": "",
    "text": "Escribir un programa, simular o ciclo Rankine calculando e trazando os puntos correspondentes aos puntos do estado e unindo a fenda entre eles, e identificalos como procesos tanto no gráfico T-S como no H-S, xunto co cálculo do traballo neto e a relación de potencia de retorno."
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#obxectivo",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#obxectivo",
    "title": "Obxectivo",
    "section": "",
    "text": "Escribir un programa, simular o ciclo Rankine calculando e trazando os puntos correspondentes aos puntos do estado e unindo a fenda entre eles, e identificalos como procesos tanto no gráfico T-S como no H-S, xunto co cálculo do traballo neto e a relación de potencia de retorno."
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#introdución",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#introdución",
    "title": "Obxectivo",
    "section": "Introdución",
    "text": "Introdución\nO ciclo Rankine é un ciclo termodinámico. Serve de modelo para a obtención de traballo nunha turbina de vapor. Debe o seu nome ó matemático escocés William John Macquorn Rankine.\nO ciclo Rankine é un ciclo enerxético de vapor que se usa nas centrais térmicas. É semellante ao ciclo de Carnot. O seu uso é máis popular porque é moito máis práctico que o ciclo de Carnot, con boas taxas de eficiencia. Tamén ten deseños que melloran a eficiencia de moitos xeitos, como a rexeración e o requecemento. Isto fai que o ciclo de Rankine sexa un ciclo ideal para as turbinas de vapor.\n\n\n\n\nDiagrama T-S exhibindo do proceso real e do ideal."
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#procesos-dun-ciclo-rankine",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#procesos-dun-ciclo-rankine",
    "title": "Obxectivo",
    "section": "Procesos dun ciclo Rankine",
    "text": "Procesos dun ciclo Rankine\nHai catro procesos no ciclo Rankine. Os estados identifícanse mediante números (en marrón) no diagrama T–s.\n**Proceso 1-2: o fluído de traballo é bombeado de baixa a alta presión. Como o fluído é un líquido nesta fase, a bomba require pouca enerxía de entrada. O proceso 1-2 é a compresión isentrópica. Proceso 2-3: o líquido de alta presión entra nunha caldeira, onde se quenta a presión constante por unha fonte de calor externa para converterse nun vapor saturado seco. A enerxía de entrada necesaria pódese calcular facilmente gráficamente, usando un gráfico de entalpía-entropía (diagrama h–s ou diagrama de Mollier), ou numericamente, usando táboas de vapor ou software. O proceso 2-3 é a adición de calor a presión constante na caldeira. Proceso 3-4: o vapor saturado seco se expande a través dunha turbina, xerando enerxía. Isto diminúe a temperatura e a presión do vapor e pode producirse algunha condensación. A saída deste proceso pódese calcular facilmente usando o gráfico ou as táboas indicadas anteriormente. O proceso 3-4 é a expansión isentrópica. Proceso 4-1: o vapor húmido entra entón nun condensador, onde se condensa a presión constante para converterse nun líquido saturado. O proceso 4-1 é o rechazo de calor a presión constante no condensador. Nun ciclo de Rankine ideal, a bomba e a turbina serían isentrópicas, é dicir, a bomba e a turbina non xerarían entropía e, polo tanto, maximizarían a produción neta de traballo. Os procesos 1–2 e 3–4 estarían representados por liñas verticais no diagrama T–s e semellan máis ao do ciclo de Carnot. O ciclo de Rankine que se mostra aquí evita que o estado do fluído de traballo acabe na rexión do vapor sobrequentado despois da expansión na turbina, [1] o que reduce a enerxía eliminada polos condensadores.\nExisten catro procesos nun ciclo Rankine, cada un alterando as propiedades do fluído de traballo. Estas propiedades son identificadas por números no diagrama.\n\nProceso 1-2, compresión isoentrópica: Primeiro, o fluído é bombeado (idealmente de forma isoentrópica) dunha presión baixa a unha presión alta utilizándose unha bomba. O bombeamento require subministración de enerxía.\nProceso 2-3, adición isobárica de calor: o fluído presurizado entra nunha caldeira, onde é quentado a presión constante até se tornar vapor sobrequentado. Fontes comúns de calor inclúen carbón, gas natural e enerxía nuclear.\nProceso 3-4, expansión isoentróica: o vapor sobrequentado expándese a través dunha turbina para xerar traballo. Idealmente, esta expansión é isoentrópica. Con esta expansión, tanto a presión como a temperatura se reducen.\nProceso 4-1. elimonación isobárica de calor: o vapor entra nun condensador, onde é arrefriado até a condición de líquido saturado. Este líquido retorna á bomba e o ciclo repítese.\n\nNeste ciclo, o traballo obtense en da turbina e consúmese na bomba. Ademais, se subministra cakir na caldeira e se elimina no condensador.\nO ciclo de potencia do vapor real difire do ciclo ideal de Rankine debido ás irreversibilidades dos compoñentes inherentes causadas pola fricción do fluído e a perda de calor ao ambiente; a fricción do fluído provoca caídas de presión na caldeira, no condensador e na canalización entre os compoñentes e, como resultado, o vapor sae da caldeira a menor presión; A perda de calor reduce a produción neta de traballo, polo que é necesaria a adición de calor ao vapor na caldeira para manter o mesmo nivel de produción neta de traballo.\nCon esta información, podemos atopar o traballo neto, a eficiencia e a relación de potencia de retorno do ciclo."
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#ecuacións",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#ecuacións",
    "title": "Obxectivo",
    "section": "Ecuacións",
    "text": "Ecuacións\nCada unha das ecuacións seguintes pódense obter facilmente a partires do balance de masa e enerxía do volume de control. A quinta ecuación define a eficiencia termodinámica do ciclo como a razón entre o traballo obtido do sistema e a calor fornecida ao sistema.\n\\[\n\\frac { \\dot{Q}_{caldeira} } { \\dot{m} } = h_2 - h_1\n\\]\n\\[\n\\frac { \\dot{W}_{turbina} } { \\dot{m} } = h_2 - h_3\n\\]\n\\[\n\\frac { \\dot{Q}_{condensador} } { \\dot{m} } = h_4 - h_3\n\\]\n\\[\n\\frac { \\dot{W}_{bomba} } { \\dot{m} } = h_4 - h_1\n\\]\nRendemento:\n\\[\n\\eta = \\frac { \\dot{W}_{turbina} - \\dot{W}_{bomba} } { \\dot{Q}_{caldeira} }\n\\]\nonde:\n\\(\\dot{Q}_{entra}\\) é a taxa de entrada de calor (enerxía por unidade de tempo)\n\\(\\dot{m}\\) o caudal másico (masa por unidade de tempo)\n\\(\\dot{W}\\) o traballo mecánico usado ou proveniente do sistema (enerxía por unidade de tempo)\n\\(\\eta\\) a eficiencia termodinámica do proceso (adimensional), e\n\\(h_1,h_2,h_3,h_4,\\) son os valores de entalpía específica especificados no diagrama T-S\nA eficiencia enerxética do ciclo defínese como:\n\\[\n\\texttt{eficiencia} = \\frac { W_{neto} } { Q_{subministrado} } \\times 100\n\\]\ndo mesmo xeito:\n\\[\n\\texttt{relacion de potencia de retorno} = \\frac { W_{turbina} } { W_{bomba} }\n\\]\n\n\n\n\nCiclo de Rankine ideal."
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#enunciado",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#enunciado",
    "title": "Obxectivo",
    "section": "Enunciado",
    "text": "Enunciado\nDeterminr a eficiencia e a tasa de retorno de potencia para o ciclo Rankine ideal da figura, que usa vapor de auga como fluido de traballo e no que a presión do condensador é de 10 kPa, e a da caldeira 2 Mpa. O vapor de auga abandona a caldeira en forma de vapor saturado. Determinar tammén o traballo da bomba por quilogramo de fluido (\\(W_p\\)) e a calor eliminada por quilogramo de fluido no condensador, \\(q_1\\).\n\n!pip install pyromat\n\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting pyromat\n  Downloading PYroMat-2.2.2.zip (1.0 MB)\n     |████████████████████████████████| 1.0 MB 27.8 MB/s \nRequirement already satisfied: numpy&gt;=1.7 in /usr/local/lib/python3.7/dist-packages (from pyromat) (1.21.6)\nBuilding wheels for collected packages: pyromat\n  Building wheel for pyromat (setup.py) ... done\n  Created wheel for pyromat: filename=PYroMat-2.2.2-py3-none-any.whl size=1008528 sha256=f8322bd6b18c282e46d532a09bc240da5c38dfa1fd5a6b80f6980a9ab42b6fad\n  Stored in directory: /root/.cache/pip/wheels/fb/19/ba/402e9773cc0dea277f5c3b24e0822c566de8c3cb45404cb6f3\nSuccessfully built pyromat\nInstalling collected packages: pyromat\nSuccessfully installed pyromat-2.2.2\n\n\n\nimport pyromat as pm\n\n\npm.config\n\n     config_file : ['/usr/local/lib/python3.7/dist-packages/pyromat/c...\n  config_verbose : False\n         dat_dir : ['/usr/local/lib/python3.7/dist-packages/pyromat/data']\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : '/usr/local/lib/python3.7/dist-packages/pyromat'\n         reg_dir : ['/usr/local/lib/python3.7/dist-packages/pyromat/r...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.2'\n warning_verbose : True\n\n\n\nauga = pm.get(\"mp.H2O\")\n\n\npm.config['unit_pressure'] = 'kPa'\n\nPara resolver o problema consideramos unha superficie de control arredor da bomba, a caldeira, a turbina e o condensador.\n\nBomba\nO líquido está saturado, logo x = 0.\n\n# líquido saturado, x = 0\n\np1 = 10  # kPa \np2 = 2000 # kPa\n\nv = 1 / auga.ds(p=p1)[0]  # 0 é porque x = 0\n\nw_p = v * ( p2 - p1 )\n\nprint(\"O traballo que entrega á bomba é de {:4.2f} kJ/kg\".format(w_p[0]))\n# print(f\"O traballo que entrega á bomba é de {round(float(w_p),2)} kJ/kg\")\n\nO traballo que entrega á bomba é de 2.01 kJ/kg\n\n\n\nh1 = auga.hs(p=p1)[0]\nh2 = h1 + w_p\n\n# print(\"h2 = {:4.2f} kJ/kg\".format(h2[0]))\nprint(f\"h2 = {round(float(h2),2)} kJ/kg\")\n\nh2 = 193.81 kJ/kg\n\n\n\n\nCaldeira\nO vapor abandona a caldeira en forma de vapor saturado. Logo x = 1.\n\np3 = p2\nh3 = auga.hs(p=p3)[1]  # 1 porque x = 1\n\nq_H = h3 - h2\n\nprint(\"A calor necesaria na caldeira é de {:4.2f} kJ/kg\".format(q_H[0]))\n# print(f\"A calor necesaria na caldeira é de {round(float(q_H),2)} kJ/kg\")\n\nA calor necesaria na caldeira é de 2604.52 kJ/kg"
  },
  {
    "objectID": "ipynb/ciclo-rankine-ideal-pyromat.html#turbina",
    "href": "ipynb/ciclo-rankine-ideal-pyromat.html#turbina",
    "title": "Obxectivo",
    "section": "Turbina",
    "text": "Turbina\n\np4 = p1\n\n\ns3 = auga.ss(p=p3)[1]  # 1 porque x = 1\n\ns4 = s3\n\nx = auga.T_s(s=s4,p=p4,quality=True)[1]  # 1 porque x = 1\n\nh4 = auga.h(p=p4,x=x)\n\nw_t = h3 - h4\n\nprint(\"O traballo xerado pola turbina é de {:4.2f} kJ/kg\".format(w_t[0]))\n# print(f\"O traballo xerado pola turbina é de {round(float(w_t),2)} kJ/kg\")\n\nO traballo xerado pola turbina é de 791.69 kJ/kg\n\n\n\nCondensador\n\nq_L = h4 - h1\n\nprint(\"A calor recuperada no condensador é de {:4.2f} kJ/kg\".format(q_L[0]))\n# print(f\"A calor recuperada no condensador é de {round(float(q_L),2)} kJ/kg\")\n\nA calor recuperada no condensador é de 1814.83 kJ/kg\n\n\n\n\nEficiencia\nA calculamos como:\n\\[\n\\eta_{ciclo} = \\frac { W_{neto} } { q_H }\n\\]\n\neficiencia_ciclo = ( w_t - w_p  ) / q_H * 100\n\n# print(\"A eficiencia térmica do ciclo é do {:4.2f}%\".format(eficiencia_ciclo[0]))\nprint(f\"A eficiencia térmica do ciclo é do {round(float(eficiencia_ciclo),2)}%\")\n\nA eficiencia térmica do ciclo é do 30.32%"
  },
  {
    "objectID": "ipynb/ColpProp.html",
    "href": "ipynb/ColpProp.html",
    "title": "./pyciclos",
    "section": "",
    "text": "import CoolProp.CoolProp as ct\n\n\nfluido = 'propane'\n\n\n# m_dot = 300 # Tm/h\nm_dot = 300 * 1e3 / 3600 # kg/s\n\n\n# p1 = 100 # bar\np1 = 100 * 1e5 # Pa\n\n\n# T1 = 540 # ºC1 =\nT1 = 540 + 273.15\n\n\n# p2 = 20 # bar\np2 = 20 * 1e5 # Pa\n\n\n# T2 = 320 # ºC\nT2 = 320 + 273.15 # K\n\n\nh1 = ct.PropsSI('H','P',p1,'T',T1,fluido)\n\n\nh2 = ct.PropsSI('H','P',p2,'T',T2,fluido)\n\n\nprint(f'Entalpía en 1 {h1:.1f} J/kg.')\n\nEntalpía en 1 1988106.3 J/kg.\n\n\n\nprint(f'Entalpía en 1 {h2:.1f} J/kg.')\n\nEntalpía en 1 1298442.8 J/kg.\n\n\n\nWcompresion = m_dot * (h1-h2)\n\n\nprint(f'Traballo de compresión: {Wcompresion / 1e6:.0f} J/kg')\n\nTraballo de compresión: 57 J/kg\n\n\nUnha bomba de calor que utiliza o refrixerante R-22 funciona cun caudal másico de 100 kg/h. O fluído entra no compresor a T1 = 300 K e P1 = 1 bar. Despreciase a a perda de calor do compresor. A presión de saída do compresor é de 5 bar. Se a eficiencia isentrópica do compresor é de 0,7 e a mecánica de 0,9, cal é a potencia absorbida do compresor e como é o refrixerante cando sae do compresor?\nO libro de texto usa o Peng-Robinson EOS, así que para comparar, utilízao tamén.\n\n# Estblecemos condicións e imports\nfrom scipy.constants import bar, hour\nfrom thermo import ChemicalConstantsPackage, PRMIX, CEOSLiquid, CEOSGas, FlashPureVLS\n\nfluido = 'propane'\n\nconstantes, correlacions = ChemicalConstantsPackage.from_IDs([fluido])\n\nT1 = 300.0 # K\nP1 = 1 * bar # bar\nP2 = 5 * bar\neta_isentropica = 0.7\neta_mecanica = 0.9\n\n\n# Usamos os modelos de Peng-Robinson publicados orixinalmente (sen modificar)\neos_kwargs = dict(Tcs=constants.Tcs, Pcs=constants.Pcs, omegas=constants.omegas)\nliquid = CEOSLiquid(PRMIX, HeatCapacityGases=correlations.HeatCapacityGases, eos_kwargs=eos_kwargs)\ngas = CEOSGas(PRMIX, HeatCapacityGases=correlations.HeatCapacityGases, eos_kwargs=eos_kwargs)\nflasher = FlashPureVLS(constants, correlations, gas=gas, liquids=[liquid], solids=[])\n\nNameError: name 'constants' is not defined\n\n\n\n# Flash ás condicións de entrada para obter enthalpñia inicial\nestado_1 = flasher.flash(T=T1, P=P1)\n# # Flash ás condicións de saída para obter enthalpía final. A entropía se conserva nos compresores e expansores!\nestado_2_ideal = flasher.flash(S=estado_1.S(), P=P2)\n# Calculamos o cambio de entalpía\ndelta_H_ideal = (estado_2_ideal.H()-estado_1.H())\n\n# A definición de eficiencia isentrópica significa que a cantidadde real de calor aportado é:\n# dH_real = dH_ideal/eta_isentropica\nH_engadido_o_fluido_real = delta_H_ideal/eta_isentropica\nprint(f'Calor engadido ó fluido (real) = {H_engadido_o_fluido_real:.2f} J/kg')\n\n\nestado_2 = flasher.flash(H=estado_1.H() + H_engadido_o_fluido_real, P=P2)\n\n\n# To calculafr a potencia real, é mais convinnte usar a enthalpía másica\npotencia_real_por_kg = (estado_2.H_mass() - estado_1.H_mass())/(eta_mecanica) # W/kg\npotencia_real = potencia_real_por_kg * 100 / hour\nprint(f'A potencia real é {potencia_real:.0f} W')\nprint(f'A temperatura de saída é {estado_2.T: .2f} K')"
  },
  {
    "objectID": "ipynb/Intro_thermo.html",
    "href": "ipynb/Intro_thermo.html",
    "title": "Creando os diagramas Txy, Pxy, e xy diagrams para unha mestura binaria (auga-etanol) con UNIFAC modificado (Dortmund) ¶",
    "section": "",
    "text": "!pip install thermo\n\nCollecting thermo\n  Downloading thermo-0.2.27-py3-none-any.whl (10.4 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/10.4 MB ? eta -:--:--     ━━╸━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.7/10.4 MB 21.1 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━╸━━━━━━━━━━━━━━━━━━━━ 5.2/10.4 MB 75.3 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸ 10.4/10.4 MB 136.9 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.4/10.4 MB 95.2 MB/s eta 0:00:00\nCollecting chemicals&gt;=1.1.5 (from thermo)\n  Downloading chemicals-1.1.5-py3-none-any.whl (23.9 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.9/23.9 MB 96.0 MB/s eta 0:00:00\nCollecting fluids&gt;=1.0.25 (from thermo)\n  Downloading fluids-1.0.25-py3-none-any.whl (1.5 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 99.8 MB/s eta 0:00:00\nRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from thermo) (1.5.3)\nRequirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from thermo) (1.11.3)\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from chemicals&gt;=1.1.5-&gt;thermo) (1.23.5)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas-&gt;thermo) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-&gt;thermo) (2023.3.post1)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas-&gt;thermo) (1.16.0)\nInstalling collected packages: fluids, chemicals, thermo\nSuccessfully installed chemicals-1.1.5 fluids-1.0.25 thermo-0.2.27"
  },
  {
    "objectID": "ipynb/Intro_thermo.html#creando-os-diagramas-txy-pxy-e-xy-diagrams-para-unha-mestura-binaria-auga-etanol-con-unifac-modificado-dortmund",
    "href": "ipynb/Intro_thermo.html#creando-os-diagramas-txy-pxy-e-xy-diagrams-para-unha-mestura-binaria-auga-etanol-con-unifac-modificado-dortmund",
    "title": "Creando os diagramas Txy, Pxy, e xy diagrams para unha mestura binaria (auga-etanol) con UNIFAC modificado (Dortmund) ¶",
    "section": "",
    "text": "!pip install thermo\n\nCollecting thermo\n  Downloading thermo-0.2.27-py3-none-any.whl (10.4 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/10.4 MB ? eta -:--:--     ━━╸━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.7/10.4 MB 21.1 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━╸━━━━━━━━━━━━━━━━━━━━ 5.2/10.4 MB 75.3 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸ 10.4/10.4 MB 136.9 MB/s eta 0:00:01     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 10.4/10.4 MB 95.2 MB/s eta 0:00:00\nCollecting chemicals&gt;=1.1.5 (from thermo)\n  Downloading chemicals-1.1.5-py3-none-any.whl (23.9 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 23.9/23.9 MB 96.0 MB/s eta 0:00:00\nCollecting fluids&gt;=1.0.25 (from thermo)\n  Downloading fluids-1.0.25-py3-none-any.whl (1.5 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.5/1.5 MB 99.8 MB/s eta 0:00:00\nRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from thermo) (1.5.3)\nRequirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from thermo) (1.11.3)\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from chemicals&gt;=1.1.5-&gt;thermo) (1.23.5)\nRequirement already satisfied: python-dateutil&gt;=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas-&gt;thermo) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-&gt;thermo) (2023.3.post1)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil&gt;=2.8.1-&gt;pandas-&gt;thermo) (1.16.0)\nInstalling collected packages: fluids, chemicals, thermo\nSuccessfully installed chemicals-1.1.5 fluids-1.0.25 thermo-0.2.27"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html",
    "href": "ipynb/refrigeration-cycle-pyromat.html",
    "title": "Enunciado",
    "section": "",
    "text": "Considera un ciclo de refrixeración que usa R134a como fluido refrixerante. A temperatura do refrixerante no evaporador é de -20 ºC, e no condensador de 40 ºC. O caudal de circulación do refrixerante é de 0,03 kg/s. 1. Determina o COP. 2. Determina a capacidade da planta en velocidade de refrixeración.\nO diagrama do proceso é o seguinte:\n\n\n\nCaptura de pantalla 2022-10-17 124549.png\n\n\nPara cada volume de control, aplicaremos o comportamento termodinámico do refrixerante R134a. O proceso está en estado estacionario polo que non hai cambios de enerxía cinética ou potencial.\nDiagrama T-S do proceso:\n\n\n\nCaptura de pantalla 2022-10-17 125305.png\n\n\n\n# instalamos pyromat\n!pip install pyromat\n\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting pyromat\n  Downloading PYroMat-2.2.2.zip (1.0 MB)\n     |████████████████████████████████| 1.0 MB 5.1 MB/s \nRequirement already satisfied: numpy&gt;=1.7 in /usr/local/lib/python3.7/dist-packages (from pyromat) (1.21.6)\nBuilding wheels for collected packages: pyromat\n  Building wheel for pyromat (setup.py) ... done\n  Created wheel for pyromat: filename=PYroMat-2.2.2-py3-none-any.whl size=1008528 sha256=59c8fb591058a1462ea21d239068137965f8c88f59de741fd83d1a872a040dea\n  Stored in directory: /root/.cache/pip/wheels/fb/19/ba/402e9773cc0dea277f5c3b24e0822c566de8c3cb45404cb6f3\nSuccessfully built pyromat\nInstalling collected packages: pyromat\nSuccessfully installed pyromat-2.2.2\n\n\n\n# importamos a librería e comprobamos as unidades\nimport pyromat as pm\npm.config\n\n     config_file : ['/usr/local/lib/python3.10/dist-packages/pyromat/...\n  config_verbose : False\n         dat_dir : ['/usr/local/lib/python3.10/dist-packages/pyromat/data']\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : '/usr/local/lib/python3.10/dist-packages/pyromat'\n         reg_dir : ['/usr/local/lib/python3.10/dist-packages/pyromat/...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.4'\n warning_verbose : True\n\n\n\n# temos que cambiar as unidades de  presión \npm.config[\"unit_pressure\"] = \"kPa\"\n\n\n# configuramos tamén a presión de referencia en 100 kPa\npm.config[\"def_p\"] = 100\n\n\n# multifase R134a\nr134a = pm.get(\"mp.C2H2F4\")\n\n\n# Datos do problema\n\nm_dot =  0.03 # kg/s\nT1 = -20 + 273.15\nT3 = 40 + 273.15"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html#enunciado",
    "href": "ipynb/refrigeration-cycle-pyromat.html#enunciado",
    "title": "Enunciado",
    "section": "",
    "text": "Considera un ciclo de refrixeración que usa R134a como fluido refrixerante. A temperatura do refrixerante no evaporador é de -20 ºC, e no condensador de 40 ºC. O caudal de circulación do refrixerante é de 0,03 kg/s. 1. Determina o COP. 2. Determina a capacidade da planta en velocidade de refrixeración.\nO diagrama do proceso é o seguinte:\n\n\n\nCaptura de pantalla 2022-10-17 124549.png\n\n\nPara cada volume de control, aplicaremos o comportamento termodinámico do refrixerante R134a. O proceso está en estado estacionario polo que non hai cambios de enerxía cinética ou potencial.\nDiagrama T-S do proceso:\n\n\n\nCaptura de pantalla 2022-10-17 125305.png\n\n\n\n# instalamos pyromat\n!pip install pyromat\n\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting pyromat\n  Downloading PYroMat-2.2.2.zip (1.0 MB)\n     |████████████████████████████████| 1.0 MB 5.1 MB/s \nRequirement already satisfied: numpy&gt;=1.7 in /usr/local/lib/python3.7/dist-packages (from pyromat) (1.21.6)\nBuilding wheels for collected packages: pyromat\n  Building wheel for pyromat (setup.py) ... done\n  Created wheel for pyromat: filename=PYroMat-2.2.2-py3-none-any.whl size=1008528 sha256=59c8fb591058a1462ea21d239068137965f8c88f59de741fd83d1a872a040dea\n  Stored in directory: /root/.cache/pip/wheels/fb/19/ba/402e9773cc0dea277f5c3b24e0822c566de8c3cb45404cb6f3\nSuccessfully built pyromat\nInstalling collected packages: pyromat\nSuccessfully installed pyromat-2.2.2\n\n\n\n# importamos a librería e comprobamos as unidades\nimport pyromat as pm\npm.config\n\n     config_file : ['/usr/local/lib/python3.10/dist-packages/pyromat/...\n  config_verbose : False\n         dat_dir : ['/usr/local/lib/python3.10/dist-packages/pyromat/data']\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : '/usr/local/lib/python3.10/dist-packages/pyromat'\n         reg_dir : ['/usr/local/lib/python3.10/dist-packages/pyromat/...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.4'\n warning_verbose : True\n\n\n\n# temos que cambiar as unidades de  presión \npm.config[\"unit_pressure\"] = \"kPa\"\n\n\n# configuramos tamén a presión de referencia en 100 kPa\npm.config[\"def_p\"] = 100\n\n\n# multifase R134a\nr134a = pm.get(\"mp.C2H2F4\")\n\n\n# Datos do problema\n\nm_dot =  0.03 # kg/s\nT1 = -20 + 273.15\nT3 = 40 + 273.15"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html#evaporador",
    "href": "ipynb/refrigeration-cycle-pyromat.html#evaporador",
    "title": "Enunciado",
    "section": "Evaporador",
    "text": "Evaporador\n\nh1 = r134a.hs(T=T1)[1] # hs =&gt; entalpía de saturación  [1] significa que é para o vapor\ns1 = r134a.ss(T=T1)[1] # ss =&gt; entropía de saturación  [1] significa que é para o vapor\np_g = r134a.ps(T=T3)    # podemos ver no diagrama que de 2' a 3 a presión é constante\n\n# Resultados\nprint(f\"Entalpía á saída do evaporador: {round(float(h1),1)} kJ/kg\")\nprint(f\"Entropía á saída do evaporador: {round(float(s1),4)} kJ/kg\")\nprint(f\"Presión de vapor : {round(float(p_g),1)} kPa\")\n\nEntalpía á saída do evaporador: 386.6 kJ/kg\nEntropía á saída do evaporador: 1.7413 kJ/kg\nPresión de vapor : 1016.5 kPa"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html#compresor",
    "href": "ipynb/refrigeration-cycle-pyromat.html#compresor",
    "title": "Enunciado",
    "section": "Compresor",
    "text": "Compresor\n\ns2 = s1\nT2 = r134a.T_s(s=s2,p=p_g)  # T_s é a temperatura de saturación á presión p_g entropía s1\nh2 = r134a.h(T=T2,p=p_g)   # h2 é a entalpía de saturación  á presión p_g entropía s1 \nw_c = h2 - h1 # traballo de compresión\n\n# Resultados\nprint(f\"Entalpía á saída do compresor: {round(float(h2),1)} kJ/kg\")\nprint(f\"Temperatura á saída do compresor: {round(float(T2),1)} K\")\nprint(f\"Traballo do compresor : {round(float(w_c),1)} kJ/kg\")\n\nEntalpía á saída do compresor: 429.0 kJ/kg\nTemperatura á saída do compresor: 321.8 K\nTraballo do compresor : 42.5 kJ/kg"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html#válvula",
    "href": "ipynb/refrigeration-cycle-pyromat.html#válvula",
    "title": "Enunciado",
    "section": "Válvula",
    "text": "Válvula\n\nh3 = r134a.hs(p=p_g)[0] # Entalpía na liña de saturación para o líquido [0]\nse = r134a.ss(p=p_g)[0] # Entropía na liña de saturación para o líquido [0]\n\nh4 = h3\nq_L = h1 - h4\n\n# Resultados\nprint(f\"Calor que entra no evaporador: {round(float(q_L),1)} kJ/kg\")\n\nCalor que entra no evaporador: 130.1 kJ/kg"
  },
  {
    "objectID": "ipynb/refrigeration-cycle-pyromat.html#cop-coefficient-of-performance",
    "href": "ipynb/refrigeration-cycle-pyromat.html#cop-coefficient-of-performance",
    "title": "Enunciado",
    "section": "COP (coefficient of performance):",
    "text": "COP (coefficient of performance):\n\\[\n\\beta = \\frac { q_L } { w_c }\n\\]\n\nbeta = q_L / w_c\n\n# Resultdados\nprint(f\"O COP (coefficient of performance) é de {round(float(beta),3)} kJ/kg\")\nprint(f\"A capacidade de refrixeración do ciclo é de {round(float(q_L*m_dot),2)} kJ/kg\")\n\nO COP (coefficient of performance) é de 3.064 kJ/kg\nA capacidade de refrixeración do ciclo é de 3.9 kJ/kg\n\n\nO sistema tamén pode funcionar como bomba de calor. En tal caso, deséxase manter unha temperatura T3 sobre o ambiente T1. En este caso, temos que considerar a magnitude qH e o COP para a bomba de calor, \\(\\beta\\)’ sería, neste caso:\n\\[\n\\beta' = \\frac { q_H } { w_c }\n\\]\n\nq_H = h2 - h3\nbetaprima = q_H / w_c\n\n## Resultados\n\nprint(f\"O COP (coefficient of performance) novo é de {round(float(betaprima),3)} kJ/kg\")\n\nO COP (coefficient of performance) novo é de 4.064 kJ/kg"
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html",
    "title": "Obxectivo",
    "section": "",
    "text": "Escribir un programa, simular o ciclo Rankine calculando e trazando os puntos correspondentes aos puntos do estado e unindo a fenda entre eles, e identificalos como procesos tanto no gráfico T-S como no H-S, xunto co cálculo do traballo neto e a relación de potencia de retorno."
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html#introdución",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html#introdución",
    "title": "Obxectivo",
    "section": "Introdución",
    "text": "Introdución\nO ciclo Rankine é un ciclo termodinámico. Serve de modelo para a obtención de traballo nunha turbina de vapor. Debe o seu nome ó matemático escocés William John Macquorn Rankine.\nO ciclo Rankine é un ciclo enerxético de vapor que se usa nas centrais térmicas. É semellante ao ciclo de Carnot. O seu uso é máis popular porque é moito máis práctico que o ciclo de Carnot, con boas taxas de eficiencia. Tamén ten deseños que melloran a eficiencia de moitos xeitos, como a rexeración e o requecemento. Isto fai que o ciclo de Rankine sexa un ciclo ideal para as turbinas de vapor.\n\n\n\n\nDiagrama T-S exhibindo do proceso real e do ideal."
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html#procesos-dun-ciclo-rankine",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html#procesos-dun-ciclo-rankine",
    "title": "Obxectivo",
    "section": "Procesos dun ciclo Rankine",
    "text": "Procesos dun ciclo Rankine\nHai catro procesos no ciclo Rankine. Os estados identifícanse mediante números (en marrón) no diagrama T–s.\n**Proceso 1-2: o fluído de traballo é bombeado de baixa a alta presión. Como o fluído é un líquido nesta fase, a bomba require pouca enerxía de entrada. O proceso 1-2 é a compresión isentrópica. Proceso 2-3: o líquido de alta presión entra nunha caldeira, onde se quenta a presión constante por unha fonte de calor externa para converterse nun vapor saturado seco. A enerxía de entrada necesaria pódese calcular facilmente gráficamente, usando un gráfico de entalpía-entropía (diagrama h–s ou diagrama de Mollier), ou numericamente, usando táboas de vapor ou software. O proceso 2-3 é a adición de calor a presión constante na caldeira. Proceso 3-4: o vapor saturado seco se expande a través dunha turbina, xerando enerxía. Isto diminúe a temperatura e a presión do vapor e pode producirse algunha condensación. A saída deste proceso pódese calcular facilmente usando o gráfico ou as táboas indicadas anteriormente. O proceso 3-4 é a expansión isentrópica. Proceso 4-1: o vapor húmido entra entón nun condensador, onde se condensa a presión constante para converterse nun líquido saturado. O proceso 4-1 é o rechazo de calor a presión constante no condensador. Nun ciclo de Rankine ideal, a bomba e a turbina serían isentrópicas, é dicir, a bomba e a turbina non xerarían entropía e, polo tanto, maximizarían a produción neta de traballo. Os procesos 1–2 e 3–4 estarían representados por liñas verticais no diagrama T–s e semellan máis ao do ciclo de Carnot. O ciclo de Rankine que se mostra aquí evita que o estado do fluído de traballo acabe na rexión do vapor sobrequentado despois da expansión na turbina, [1] o que reduce a enerxía eliminada polos condensadores.\nExisten catro procesos nun ciclo Rankine, cada un alterando as propiedades do fluído de traballo. Estas propiedades son identificadas por números no diagrama.\n\nProceso 1-2, compresión isoentrópica: Primeiro, o fluído é bombeado (idealmente de forma isoentrópica) dunha presión baixa a unha presión alta utilizándose unha bomba. O bombeamento require subministración de enerxía.\nProceso 2-3, adición isobárica de calor: o fluído presurizado entra nunha caldeira, onde é quentado a presión constante até se tornar vapor sobrequentado. Fontes comúns de calor inclúen carbón, gas natural e enerxía nuclear.\nProceso 3-4, expansión isoentróica: o vapor sobrequentado expándese a través dunha turbina para xerar traballo. Idealmente, esta expansión é isoentrópica. Con esta expansión, tanto a presión como a temperatura se reducen.\nProceso 4-1. elimonación isobárica de calor: o vapor entra nun condensador, onde é arrefriado até a condición de líquido saturado. Este líquido retorna á bomba e o ciclo repítese.\n\nNeste ciclo, o traballo obtense en da turbina e consúmese na bomba. Ademais, se subministra cakir na caldeira e se elimina no condensador.\nO ciclo de potencia do vapor real difire do ciclo ideal de Rankine debido ás irreversibilidades dos compoñentes inherentes causadas pola fricción do fluído e a perda de calor ao ambiente; a fricción do fluído provoca caídas de presión na caldeira, no condensador e na canalización entre os compoñentes e, como resultado, o vapor sae da caldeira a menor presión; A perda de calor reduce a produción neta de traballo, polo que é necesaria a adición de calor ao vapor na caldeira para manter o mesmo nivel de produción neta de traballo.\nCon esta información, podemos atopar o traballo neto, a eficiencia e a relación de potencia de retorno do ciclo."
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html#ecuacións",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html#ecuacións",
    "title": "Obxectivo",
    "section": "Ecuacións",
    "text": "Ecuacións\nCada unha das ecuacións seguintes pódense obter facilmente a partires do balance de masa e enerxía do volume de control. A quinta ecuación define a eficiencia termodinámica do ciclo como a razón entre o traballo obtido do sistema e a calor fornecida ao sistema.\n\\[\n\\frac { \\dot{Q}_{caldeira} } { \\dot{m} } = h_2 - h_1\n\\]\n\\[\n\\frac { \\dot{W}_{turbina} } { \\dot{m} } = h_2 - h_3\n\\]\n\\[\n\\frac { \\dot{Q}_{condensador} } { \\dot{m} } = h_4 - h_3\n\\]\n\\[\n\\frac { \\dot{W}_{bomba} } { \\dot{m} } = h_4 - h_1\n\\]\nRendemento:\n\\[\n\\eta = \\frac { \\dot{W}_{turbina} - \\dot{W}_{bomba} } { \\dot{Q}_{caldeira} }\n\\]\nonde:\n\\(\\dot{Q}_{entra}\\) é a taxa de entrada de calor (enerxía por unidade de tempo)\n\\(\\dot{m}\\) o caudal másico (masa por unidade de tempo)\n\\(\\dot{W}\\) o traballo mecánico usado ou proveniente do sistema (enerxía por unidade de tempo)\n\\(\\eta\\) a eficiencia termodinámica do proceso (adimensional), e\n\\(h_1,h_2,h_3,h_4,\\) son os valores de entalpía específica especificados no diagrama T-S\nA eficiencia enerxética do ciclo defínese como:\n\\[\n\\texttt{eficiencia} = \\frac { W_{neto} } { Q_{subministrado} } \\times 100\n\\]\ndo mesmo xeito:\n\\[\n\\texttt{relacion de potencia de retorno} = \\frac { W_{turbina} } { W_{bomba} }\n\\]\n\nCiclo de Rankine ideal."
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html#enunciado",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html#enunciado",
    "title": "Obxectivo",
    "section": "Enunciado",
    "text": "Enunciado\nDeterminr a eficiencia e a tasa de retorno de potencia para o ciclo Rankine ideal da figura, que usa vapor de auga como fluido de traballo e no que a presión do condensador é de 10 kPa, e a da caldeira 2 Mpa. O vapor de auga abandona a caldeira en forma de vapor saturado. Determinar tammén o traballo da bomba por quilogramo de fluido (\\(W_p\\)) e a calor eliminada por quilogramo de fluido no condensador, \\(q_1\\).\n\nimport numpy as np\nimport pyromat as pm\n\nPodemos ollar o ficheiro de configuración usando:\n\npm.config\n\n     config_file : ['C:\\\\Users\\\\anxos\\\\Documents\\\\Github\\\\SOPQ-2324\\\\...\n  config_verbose : False\n         dat_dir : ['C:\\\\Users\\\\anxos\\\\Documents\\\\Github\\\\SOPQ-2324\\\\...\n dat_exist_fatal : False\n   dat_overwrite : True\n   dat_recursive : True\n     dat_verbose : False\n           def_T : 298.15\n         def_oob : nan\n           def_p : 1.01325\n   error_verbose : True\n     install_dir : 'C:\\\\Users\\\\anxos\\\\Documents\\\\Github\\\\SOPQ-2324\\\\....\n         reg_dir : ['C:\\\\Users\\\\anxos\\\\Documents\\\\Github\\\\SOPQ-2324\\\\...\n reg_exist_fatal : False\n   reg_overwrite : True\n     reg_verbose : False\n     unit_energy : 'kJ'\n      unit_force : 'N'\n     unit_length : 'm'\n       unit_mass : 'kg'\n     unit_matter : 'kg'\n      unit_molar : 'kmol'\n   unit_pressure : 'bar'\nunit_temperature : 'K'\n       unit_time : 's'\n     unit_volume : 'm3'\n         version : '2.2.4'\n warning_verbose : True\n\n\nO fluido é auga:\n\nauga = pm.get(\"mp.H2O\")\n\nCambiamos as unidades de presión a kPa:\n\npm.config['unit_pressure'] = 'kPa'\n\nPara resolver o problema consideramos unha superficie de control arredor da bomba, a caldeira, a turbina e o condensador.\n\nBomba (traballo)\nO líquido está saturado, logo x = 0.\n\n# líquido saturado, x = 0\np1 = 10  # kPa \np2 = 2000 # kPa\nv = 1 / auga.ds(p=p1)[0]  # 0 é porque x = 0\nw_p = v * ( p2 - p1 )\nprint(\"O traballo que entrega á bomba é de {:4.2f} kJ/kg\".format(w_p[0]))\n# print(f\"O traballo que entrega á bomba é de {round(float(w_p),2)} kJ/kg\")\n\nO traballo que entrega á bomba é de 2.01 kJ/kg\n\n\n\nh1 = auga.hs(p=p1)[0]\nh2 = h1 + w_p[0]\nprint(\"h2 = {:4.2f} kJ/kg\".format(h2[0]))\nprint(f\"h2 = {round(float(h2[0])):4.2f} kJ/kg\")\n\nh2 = 193.81 kJ/kg\nh2 = 194.00 kJ/kg\n\n\n\n\nCaldeira (calor)\nO vapor abandona a caldeira en forma de vapor saturado. Logo x = 1.\n\np3 = p2\nh3 = auga.hs(p=p3)[1]  # 1 porque x = 1\nq_H = h3 - h2\nprint(\"A calor necesaria na caldeira é de {:4.2f} kJ/kg\".format(q_H[0]))\n# print(f\"A calor necesaria na caldeira é de {round(float(q_H),2)} kJ/kg\")\n\nA calor necesaria na caldeira é de 2604.52 kJ/kg"
  },
  {
    "objectID": "posts/20240208-Ideal-Rankine-Pyromat/index.html#turbina-traballo",
    "href": "posts/20240208-Ideal-Rankine-Pyromat/index.html#turbina-traballo",
    "title": "Obxectivo",
    "section": "Turbina (traballo)",
    "text": "Turbina (traballo)\n\np4 = p1\ns3 = auga.ss(p=p3)[1]  # 1 porque x = 1\ns4 = s3\nx = auga.T_s(s=s4,p=p4,quality=True)[1]  # 1 porque x = 1\nh4 = auga.h(p=p4,x=x)\nw_t = h3 - h4\nprint(\"O traballo xerado pola turbina é de {:4.2f} kJ/kg\".format(w_t[0]))\n# print(f\"O traballo xerado pola turbina é de {round(float(w_t),2)} kJ/kg\")\n\nO traballo xerado pola turbina é de 791.69 kJ/kg\n\n\n\nCondensador (calor)\n\nq_L = h4 - h1\nprint(\"A calor recuperada no condensador é de {:4.2f} kJ/kg\".format(q_L[0]))\n# print(f\"A calor recuperada no condensador é de {round(float(q_L),2)} kJ/kg\")\n\nA calor recuperada no condensador é de 1814.83 kJ/kg\n\n\n\n\nEficiencia\nA calculamos como:\n\\[\n\\eta_{ciclo} = \\frac { W_{neto} } { q_H }\n\\]\n\neficiencia_ciclo = ( w_t[0] - w_p[0]  ) / q_H[0] * 100\n# print(\"A eficiencia térmica do ciclo é do {:4.2f}%\".format(eficiencia_ciclo[0]))\nprint(f\"A eficiencia térmica do ciclo é do {round(float(eficiencia_ciclo),2)}%\")\n\nA eficiencia térmica do ciclo é do 30.32%"
  }
]